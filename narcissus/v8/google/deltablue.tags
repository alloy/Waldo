!_TAG_FILE_FORMAT	2	/extended format/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Patrick Walton	/pwalton@mozilla.com/
!_TAG_PROGRAM_NAME	jsctags	//
!_TAG_PROGRAM_URL	http://github.com/pcwalton/jsctags	/GitHub repository/
!_TAG_PROGRAM_VERSION	0.1	//
BinaryConstraint	deltablue.js	/^function BinaryConstraint(var1, var2, strength) {$/;"	f	lineno:341	type:void function(<null | Variable>, <null | Variable>, Strength)
Constraint	deltablue.js	/^function Constraint(strength) {$/;"	f	lineno:153	type:void function(Strength)
DeltaBlue	deltablue.js	/^var DeltaBlue = new BenchmarkSuite('DeltaBlue', 71104, [$/;"	v	lineno:26	type:any
Direction	deltablue.js	/^var Direction = new Object();$/;"	v	lineno:332	type:Object
EditConstraint	deltablue.js	/^function EditConstraint(v, str) {$/;"	f	lineno:311	type:<void | EditConstraint> function(<null | Variable>, Strength)
EqualityConstraint	deltablue.js	/^function EqualityConstraint(var1, var2, strength) {$/;"	f	lineno:514	type:<void | EqualityConstraint> function(null, Variable, Strength)
Inheriter	deltablue.js	/^  function Inheriter() { }$/;"	f	lineno:50	type:Inheriter function()
OrderedCollection	deltablue.js	/^function OrderedCollection() {$/;"	f	lineno:56	type:<void | OrderedCollection> function()
Plan	deltablue.js	/^function Plan() {$/;"	f	lineno:757	type:<void | Plan> function()
Planner	deltablue.js	/^function Planner() {$/;"	f	lineno:570	type:<void | Planner> function()
ScaleConstraint	deltablue.js	/^function ScaleConstraint(src, scale, offset, dest, strength) {$/;"	f	lineno:455	type:<void | ScaleConstraint> function(<null | Variable>, Variable, Variable, <null | Variable>, Strength)
StayConstraint	deltablue.js	/^function StayConstraint(v, str) {$/;"	f	lineno:293	type:<void | StayConstraint> function(<null | Variable>, Strength)
Strength	deltablue.js	/^function Strength(strengthValue, name) {$/;"	f	lineno:101	type:Strength function(number, string)
UnaryConstraint	deltablue.js	/^function UnaryConstraint(v, strength) {$/;"	f	lineno:212	type:void function(<null | Variable>, Strength)
Variable	deltablue.js	/^function Variable(name, initialValue) {$/;"	f	lineno:537	type:<void | Variable> function(string, <number | undefined>)
add	deltablue.js	/^OrderedCollection.prototype.add = function (elm) {$/;"	f	lineno:60	type:void function(<undefined | null | Variable | Constraint>)
addConstraint	deltablue.js	/^Constraint.prototype.addConstraint = function () {$/;"	f	lineno:160	type:void function()
addConstraint	deltablue.js	/^Plan.prototype.addConstraint = function (c) {$/;"	f	lineno:761	type:void function(<undefined | null | Variable | Constraint>)
addConstraint	deltablue.js	/^Variable.prototype.addConstraint = function (c) {$/;"	f	lineno:551	type:void function(Constraint)
addConstraintsConsumingTo	deltablue.js	/^Planner.prototype.addConstraintsConsumingTo = function (v, coll) {$/;"	f	lineno:738	type:void function(<undefined | null | Variable>, OrderedCollection)
addPropagate	deltablue.js	/^Planner.prototype.addPropagate = function (c, mark) {$/;"	f	lineno:691	type:boolean function(<undefined | null | Variable | Constraint>, number)
addToGraph	deltablue.js	/^BinaryConstraint.prototype.addToGraph = function () {$/;"	f	lineno:381	type:void function()
addToGraph	deltablue.js	/^ScaleConstraint.prototype.addToGraph = function () {$/;"	f	lineno:467	type:void function()
addToGraph	deltablue.js	/^UnaryConstraint.prototype.addToGraph = function () {$/;"	f	lineno:224	type:void function()
at	deltablue.js	/^OrderedCollection.prototype.at = function (index) {$/;"	f	lineno:64	type:<undefined | null | Variable | Constraint> function(number)
chainTest	deltablue.js	/^function chainTest(n) {$/;"	f	lineno:797	type:void function(number)
change	deltablue.js	/^function change(v, newValue) {$/;"	f	lineno:862	type:void function(<null | Variable>, number)
chooseMethod	deltablue.js	/^BinaryConstraint.prototype.chooseMethod = function (mark) {$/;"	f	lineno:356	type:void function(number)
chooseMethod	deltablue.js	/^UnaryConstraint.prototype.chooseMethod = function (mark) {$/;"	f	lineno:233	type:void function(number)
constraintAt	deltablue.js	/^Plan.prototype.constraintAt = function (index) {$/;"	f	lineno:769	type:<undefined | null | Variable | Constraint> function(number)
deltaBlue	deltablue.js	/^function deltaBlue() {$/;"	f	lineno:877	type:void function()
destroyConstraint	deltablue.js	/^Constraint.prototype.destroyConstraint = function () {$/;"	f	lineno:190	type:void function()
execute	deltablue.js	/^EditConstraint.prototype.execute = function () {$/;"	f	lineno:324	type:void function()
execute	deltablue.js	/^EqualityConstraint.prototype.execute = function () {$/;"	f	lineno:523	type:void function()
execute	deltablue.js	/^Plan.prototype.execute = function () {$/;"	f	lineno:773	type:void function()
execute	deltablue.js	/^ScaleConstraint.prototype.execute = function () {$/;"	f	lineno:487	type:void function()
execute	deltablue.js	/^StayConstraint.prototype.execute = function () {$/;"	f	lineno:299	type:void function()
extractPlanFromConstraints	deltablue.js	/^Planner.prototype.extractPlanFromConstraints = function (constraints) {$/;"	f	lineno:667	type:Plan function(OrderedCollection)
incrementalAdd	deltablue.js	/^Planner.prototype.incrementalAdd = function (c) {$/;"	f	lineno:588	type:void function(<undefined | null | Variable | Constraint>)
incrementalRemove	deltablue.js	/^Planner.prototype.incrementalRemove = function (c) {$/;"	f	lineno:606	type:void function(<undefined | null | Variable | Constraint>)
inheritsFrom	deltablue.js	/^Object.prototype.inheritsFrom = function (shuper) {$/;"	f	lineno:49	type:void function(<void function(Strength) | void function(<null | Variable>, Strength) | void function(<null | Variable>, <null | Variable>, Strength)>)
input	deltablue.js	/^BinaryConstraint.prototype.input = function () {$/;"	f	lineno:404	type:<undefined | null | Variable> function()
inputsKnown	deltablue.js	/^BinaryConstraint.prototype.inputsKnown = function (mark) {$/;"	f	lineno:434	type:boolean function(number)
inputsKnown	deltablue.js	/^UnaryConstraint.prototype.inputsKnown = function () {$/;"	f	lineno:274	type:boolean function()
isInput	deltablue.js	/^Constraint.prototype.isInput = function () {$/;"	f	lineno:200	type:boolean function()
isInput	deltablue.js	/^EditConstraint.prototype.isInput = function () {$/;"	f	lineno:320	type:boolean function()
isSatisfied	deltablue.js	/^BinaryConstraint.prototype.isSatisfied = function () {$/;"	f	lineno:390	type:boolean function()
isSatisfied	deltablue.js	/^UnaryConstraint.prototype.isSatisfied = function () {$/;"	f	lineno:241	type:<boolean | undefined> function()
makePlan	deltablue.js	/^Planner.prototype.makePlan = function (sources) {$/;"	f	lineno:648	type:Plan function(OrderedCollection)
markInputs	deltablue.js	/^BinaryConstraint.prototype.markInputs = function (mark) {$/;"	f	lineno:397	type:void function(number)
markInputs	deltablue.js	/^ScaleConstraint.prototype.markInputs = function (mark) {$/;"	f	lineno:479	type:void function(number)
markInputs	deltablue.js	/^UnaryConstraint.prototype.markInputs = function (mark) {$/;"	f	lineno:245	type:void function(number)
markUnsatisfied	deltablue.js	/^BinaryConstraint.prototype.markUnsatisfied = function () {$/;"	f	lineno:430	type:void function()
markUnsatisfied	deltablue.js	/^UnaryConstraint.prototype.markUnsatisfied = function () {$/;"	f	lineno:270	type:void function()
newMark	deltablue.js	/^Planner.prototype.newMark = function () {$/;"	f	lineno:625	type:number function()
nextWeaker	deltablue.js	/^Strength.prototype.nextWeaker = function () {$/;"	f	lineno:122	type:Strength function()
output	deltablue.js	/^BinaryConstraint.prototype.output = function () {$/;"	f	lineno:411	type:<undefined | null | Variable> function()
output	deltablue.js	/^UnaryConstraint.prototype.output = function () {$/;"	f	lineno:252	type:<undefined | null | Variable> function()
planner	deltablue.js	/^var planner = null;$/;"	v	lineno:875	type:<null | Planner>
projectionTest	deltablue.js	/^function projectionTest(n) {$/;"	f	lineno:831	type:void function(number)
recalculate	deltablue.js	/^BinaryConstraint.prototype.recalculate = function () {$/;"	f	lineno:420	type:void function()
recalculate	deltablue.js	/^ScaleConstraint.prototype.recalculate = function () {$/;"	f	lineno:500	type:void function()
recalculate	deltablue.js	/^UnaryConstraint.prototype.recalculate = function () {$/;"	f	lineno:261	type:void function()
remove	deltablue.js	/^OrderedCollection.prototype.remove = function (elm) {$/;"	f	lineno:76	type:void function(<undefined | null | Variable | Constraint>)
removeConstraint	deltablue.js	/^Variable.prototype.removeConstraint = function (c) {$/;"	f	lineno:558	type:void function(<undefined | null | Variable | Constraint>)
removeFirst	deltablue.js	/^OrderedCollection.prototype.removeFirst = function () {$/;"	f	lineno:72	type:<undefined | null | Variable | Constraint> function()
removeFromGraph	deltablue.js	/^BinaryConstraint.prototype.removeFromGraph = function () {$/;"	f	lineno:439	type:void function()
removeFromGraph	deltablue.js	/^ScaleConstraint.prototype.removeFromGraph = function () {$/;"	f	lineno:473	type:void function()
removeFromGraph	deltablue.js	/^UnaryConstraint.prototype.removeFromGraph = function () {$/;"	f	lineno:278	type:void function()
removePropagateFrom	deltablue.js	/^Planner.prototype.removePropagateFrom = function (out) {$/;"	f	lineno:712	type:OrderedCollection function(<undefined | null | Variable>)
satisfy	deltablue.js	/^Constraint.prototype.satisfy = function (mark) {$/;"	f	lineno:172	type:<undefined | null | Variable | Constraint> function(number)
size	deltablue.js	/^OrderedCollection.prototype.size = function () {$/;"	f	lineno:68	type:number function()
size	deltablue.js	/^Plan.prototype.size = function () {$/;"	f	lineno:765	type:number function()
stronger	deltablue.js	/^Strength.stronger = function (s1, s2) {$/;"	f	lineno:106	type:boolean function(<undefined | Strength>, <undefined | Strength>)
strongest	deltablue.js	/^Strength.strongest = function (s1, s2) {$/;"	f	lineno:118	type:any function(any, any)
weaker	deltablue.js	/^Strength.weaker = function (s1, s2) {$/;"	f	lineno:110	type:boolean function(<undefined | Strength>, <undefined | Strength>)
weakestOf	deltablue.js	/^Strength.weakestOf = function (s1, s2) {$/;"	f	lineno:114	type:<undefined | Strength> function(<undefined | Strength>, <undefined | Strength>)
